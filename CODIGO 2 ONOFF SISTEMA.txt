// CODIGO ENCENDER SISTEMA CON UN PULSADOR Y QUE SE APAGUE EN 10 SEGUNDOS (CON UN LED PARPADEANDO)
extern "C" void app_main() ;

#include <stdio.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "driver/gpio.h"
#include "esp_log.h"
#include "sdkconfig.h"

#define LED_PIN GPIO_NUM_2   // LED en el pin 2 (en muchas placas es el LED integrado)
#define PINOFF GPIO_NUM_4    // Pin que indica cuando el sistema debe apagarse

void app_main(void)
{
    // Configurar pin como salida
    gpio_reset_pin(LED_PIN);
    gpio_set_direction(LED_PIN, GPIO_MODE_OUTPUT);
    gpio_set_direction(PINOFF, GPIO_MODE_OUTPUT);
    gpio_set_level(PINOFF, 1);   // Definir en 1 el pin 4
    uint32_t contador = 0;
    
    while (1) {
        gpio_set_level(LED_PIN, 1);   // Encender LED pin 2
        vTaskDelay(1000 / portTICK_PERIOD_MS); // 1 segundo
        gpio_set_level(LED_PIN, 0);   // Apagar LED pin 2
        vTaskDelay(1000 / portTICK_PERIOD_MS); // 1 segundo

        //Hasta aqui hay 2 segundos, cuando pasa al if, el contador aumenta en uno
        //El contador debe aumentar en 5 (5 veces que se repite el ciclo)
        //Es decir cuando hayan pasado 10 segundos del parpadeo del led anterior

        if(contador++==5){ 
            gpio_set_level(PINOFF, 0);  // Definir en 0 el pin 4 APAGA SISTEMA
        }
    }
}
    
    